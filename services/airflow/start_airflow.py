"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Airflow —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ MLOps –ø–∞–π–ø–ª–∞–π–Ω–∞
"""
import os
import subprocess
import sys
from pathlib import Path

def setup_airflow():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Airflow –¥–ª—è MLOps –ø–∞–π–ø–ª–∞–π–Ω–∞"""
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ['AIRFLOW_HOME'] = str(Path(__file__).parent)
    os.environ['AIRFLOW__CORE__DAGS_FOLDER'] = str(Path(__file__).parent / 'dags')
    os.environ['AIRFLOW__CORE__BASE_LOG_FOLDER'] = str(Path(__file__).parent / 'logs')
    os.environ['AIRFLOW__CORE__EXECUTOR'] = 'LocalExecutor'
    os.environ['AIRFLOW__CORE__SQL_ALCHEMY_CONN'] = f'sqlite:///{Path(__file__).parent}/airflow.db'
    os.environ['AIRFLOW__WEBSERVER__WEB_SERVER_PORT'] = '8080'
    os.environ['AIRFLOW__WEBSERVER__WEB_SERVER_HOST'] = '0.0.0.0'
    os.environ['AIRFLOW__CORE__LOAD_EXAMPLES'] = 'False'
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Airflow –¥–ª—è MLOps –ø–∞–π–ø–ª–∞–π–Ω–∞...")
    print(f"üìÅ AIRFLOW_HOME: {os.environ['AIRFLOW_HOME']}")
    print(f"üìÅ DAGS_FOLDER: {os.environ['AIRFLOW__CORE__DAGS_FOLDER']}")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    Path(__file__).parent.mkdir(exist_ok=True)
    (Path(__file__).parent / 'dags').mkdir(exist_ok=True)
    (Path(__file__).parent / 'logs').mkdir(exist_ok=True)
    
    return True

def init_airflow():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Airflow"""
    try:
        print("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Airflow...")
        subprocess.run(['airflow', 'db', 'init'], check=True)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def create_admin_user():
    """–°–æ–∑–¥–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Airflow"""
    try:
        print("üë§ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
        subprocess.run([
            'airflow', 'users', 'create',
            '--username', 'admin',
            '--firstname', 'Admin',
            '--lastname', 'User',
            '--role', 'Admin',
            '--email', 'admin@example.com',
            '--password', 'admin'
        ], check=True)
        print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ö†Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
        return True  # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ

def start_airflow():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Airflow"""
    print("üöÄ –ó–∞–ø—É—Å–∫ Airflow...")
    print("üìä –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080")
    print("üë§ –õ–æ–≥–∏–Ω: admin, –ü–∞—Ä–æ–ª—å: admin")
    print("üîÑ MLOps –ø–∞–π–ø–ª–∞–π–Ω –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç")
    print("‚èπÔ∏è –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ —Ñ–æ–Ω–µ
        scheduler_process = subprocess.Popen(['airflow', 'scheduler'])
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
        webserver_process = subprocess.Popen(['airflow', 'webserver'])
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        scheduler_process.wait()
        webserver_process.wait()
        
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Airflow...")
        scheduler_process.terminate()
        webserver_process.terminate()
        print("‚úÖ Airflow –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üç∑ Wine Quality MLOps Pipeline - Airflow Setup")
    print("=" * 50)
    
    if not setup_airflow():
        print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Airflow")
        sys.exit(1)
    
    if not init_airflow():
        print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Airflow")
        sys.exit(1)
    
    if not create_admin_user():
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        sys.exit(1)
    
    start_airflow()

if __name__ == "__main__":
    main()
