#!/bin/bash

# üç∑ Wine Quality MLOps Pipeline - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Conda –æ–∫—Ä—É–∂–µ–Ω–∏—è
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üç∑ Wine Quality MLOps Pipeline - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Conda –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "=========================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ conda
if ! command -v conda &> /dev/null; then
    echo "‚ùå Conda –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Anaconda –∏–ª–∏ Miniconda."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker."
    exit 1
fi

echo "‚úÖ Conda –∏ Docker –Ω–∞–π–¥–µ–Ω—ã"

# –ò–º—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV_NAME="wine_mlops"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if conda env list | grep -q $ENV_NAME; then
    echo "‚ö†Ô∏è  –û–∫—Ä—É–∂–µ–Ω–∏–µ '$ENV_NAME' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
    read -p "–£–¥–∞–ª–∏—Ç—å –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
        conda env remove -n $ENV_NAME -y
    else
        echo "üìù –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
        conda activate $ENV_NAME
        echo "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!"
        exit 0
    fi
fi

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üîß –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ '$ENV_NAME'..."
conda create -n $ENV_NAME python=3.9 -y

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "‚ö° –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
source $(conda info --base)/etc/profile.d/conda.sh
conda activate $ENV_NAME

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é
if [[ "$CONDA_DEFAULT_ENV" != "$ENV_NAME" ]]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    exit 1
fi

echo "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ '$ENV_NAME' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
pip install -r requirements.txt

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
python --version
echo "‚úÖ Python –≤–µ—Ä—Å–∏—è: $(python --version)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞–∫–µ—Ç—ã..."
python -c "import fastapi; print('‚úÖ FastAPI:', fastapi.__version__)"
python -c "import streamlit; print('‚úÖ Streamlit:', streamlit.__version__)"
python -c "import dvc; print('‚úÖ DVC:', dvc.__version__)"
python -c "import mlflow; print('‚úÖ MLflow:', mlflow.__version__)"
python -c "import airflow; print('‚úÖ Airflow:', airflow.__version__)"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DVC
echo "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DVC..."
if [ ! -d ".dvc" ]; then
    dvc init
    echo "‚úÖ DVC –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
else
    echo "‚úÖ DVC —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
mkdir -p data/raw data/processed models services/airflow/dags services/airflow/logs

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
echo "üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ..."
cd code/datasets
python download_data.py
cd ../..

# –û–±—É—á–∞–µ–º –º–æ–¥–µ–ª—å
echo "ü§ñ –û–±—É—á–∞–µ–º –º–æ–¥–µ–ª—å..."
cd code/models
python train_model.py
cd ../..

# –ó–∞–ø—É—Å–∫–∞–µ–º DVC –ø–∞–π–ø–ª–∞–π–Ω
echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º DVC –ø–∞–π–ø–ª–∞–π–Ω..."
dvc repro

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo "=========================================================="
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: conda activate $ENV_NAME"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker: cd code/deployment && sudo docker-compose up --build -d"
echo "3. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8501"
echo "4. –û—Ç–∫—Ä–æ–π—Ç–µ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: http://localhost:8000/docs"
echo "5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Airflow: cd services/airflow && python start_airflow.py"
echo ""
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
echo "   ‚Ä¢ Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8501"
echo "   ‚Ä¢ FastAPI –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
echo "   ‚Ä¢ Airflow UI: http://localhost:8080 (admin/admin)"
echo "   ‚Ä¢ MLflow UI: mlflow ui (–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ)"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "   ‚Ä¢ README_CONDA_SETUP.md - –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"
echo "   ‚Ä¢ README_MLOPS_PIPELINE.md - –û–ø–∏—Å–∞–Ω–∏–µ MLOps –ø–∞–π–ø–ª–∞–π–Ω–∞"
echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!"
