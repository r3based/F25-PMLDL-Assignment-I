"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –±–µ–∑ Docker
"""
import requests
import json

# URL API (–ª–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫)
API_URL = "http://localhost:8000"

def test_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã API"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Wine Quality Prediction API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API...")
    try:
        response = requests.get(f"{API_URL}/health")
        if response.status_code == 200:
            print("‚úÖ API –∑–¥–æ—Ä–æ–≤")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥–µ–ª–∏...")
    try:
        response = requests.get(f"{API_URL}/model_info")
        if response.status_code == 200:
            print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω–∞")
            model_info = response.json()
            print(f"   –¢–∏–ø –º–æ–¥–µ–ª–∏: {model_info['model_type']}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ä–µ–≤—å–µ–≤: {model_info['n_estimators']}")
            print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞: {model_info['max_depth']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è...")
    
    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    test_data = {
        "fixed_acidity": 7.0,
        "volatile_acidity": 0.3,
        "citric_acid": 0.3,
        "residual_sugar": 2.0,
        "chlorides": 0.05,
        "free_sulfur_dioxide": 15.0,
        "total_sulfur_dioxide": 50.0,
        "density": 0.997,
        "ph": 3.2,
        "sulphates": 0.6,
        "alcohol": 10.5
    }
    
    try:
        response = requests.post(
            f"{API_URL}/predict",
            json=test_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ")
            print(f"   –ö–∞—á–µ—Å—Ç–≤–æ –≤–∏–Ω–∞: {result['prediction']}/10")
            print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']:.2%}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π...")
    
    test_cases = [
        {
            "name": "–•–æ—Ä–æ—à–µ–µ –≤–∏–Ω–æ",
            "data": {
                "fixed_acidity": 8.0,
                "volatile_acidity": 0.2,
                "citric_acid": 0.4,
                "residual_sugar": 1.5,
                "chlorides": 0.04,
                "free_sulfur_dioxide": 20.0,
                "total_sulfur_dioxide": 60.0,
                "density": 0.995,
                "ph": 3.3,
                "sulphates": 0.7,
                "alcohol": 12.0
            }
        },
        {
            "name": "–°—Ä–µ–¥–Ω–µ–µ –≤–∏–Ω–æ",
            "data": {
                "fixed_acidity": 6.5,
                "volatile_acidity": 0.4,
                "citric_acid": 0.2,
                "residual_sugar": 3.0,
                "chlorides": 0.06,
                "free_sulfur_dioxide": 10.0,
                "total_sulfur_dioxide": 40.0,
                "density": 0.998,
                "ph": 3.1,
                "sulphates": 0.5,
                "alcohol": 9.5
            }
        }
    ]
    
    for test_case in test_cases:
        try:
            response = requests.post(
                f"{API_URL}/predict",
                json=test_case["data"],
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                result = response.json()
                print(f"   {test_case['name']}: {result['prediction']}/10 (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {result['confidence']:.2%})")
            else:
                print(f"   {test_case['name']}: ‚ùå –û—à–∏–±–∫–∞ {response.status_code}")
        except Exception as e:
            print(f"   {test_case['name']}: ‚ùå –û—à–∏–±–∫–∞ {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_api()
